{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n// Selecting DOM Elements:\nconst addBtn = document.querySelectorAll('.btn');\nconst taskContainers = document.querySelectorAll('.tasks__container');\n\n// Generating and Rendering Local Storage Tasks:\nconst Render = function (task, disabled = true) {\n  const markup = `\n  <li data-id = \"${task.id}\" class=\"${\n    task.state\n  }-el to__do-el\" draggable=\"true\">\n   <form action=\"\" id=\"form\">\n     <input\n         value=\"${task.title}\"\n         placeholder=\"What Did You Planned?\"\n         type=\"text\"\n         class= \"${task.state}-input\"\n         ${disabled ? 'disabled' : ''}\n        />\n     <div class=\"el__tools\">\n        <i\n         class=\"fa fa-pencil edit__btn el__tool\"\n         id = \"os\"\n         aria-hidden=\"true\"\n       ></i>\n       <i\n         class=\"fa fa-trash remove__btn el__tool\"\n         aria-hidden=\"true\"\n       ></i>\n      </div>\n    </form>\n  </li>\n  `;\n\n  taskContainers.forEach(container => {\n    container.classList.contains(`${task.state}-elements`) &&\n      container.insertAdjacentHTML('afterbegin', markup);\n  });\n};\n\n// Generating and Rendering Tasks:\nconst generateMarkupAndRender = function (target, disabled = false) {\n  const markup = `\n  <li class=\"${target.dataset.section}-el to__do-el\" draggable=\"true\">\n   <form action=\"\" id=\"form\">\n     <input\n         value=\"\"\n         placeholder=\"What Did You Planned?\"\n         type=\"text\"\n         class= \"${target.dataset.section}-input\"\n         ${disabled ? 'disabled' : ''}\n         data-id = \"${Date.now()}\"\n        />\n     <div class=\"el__tools\">\n        <i\n         class=\"fa fa-pencil edit__btn el__tool\"\n         aria-hidden=\"true\"\n       ></i>\n       <i\n         class=\"fa fa-trash remove__btn el__tool\"\n         aria-hidden=\"true\"\n       ></i>\n      </div>\n    </form>\n  </li>\n  `;\n\n  taskContainers.forEach(container => {\n    container.classList.contains(`${target.dataset.section}-elements`) &&\n      container.insertAdjacentHTML('afterbegin', markup);\n  });\n};\n\n// Empty Array To Store Tasks:\nlet arrOfTasks = [];\n\n// Check if Theres Tasks In Local Storage\nif (localStorage.getItem('tasks')) {\n  arrOfTasks = JSON.parse(localStorage.getItem('tasks'));\n}\n\n// Trigger Get Data From Local Storage Function\ngetDataFromLocalStorage();\n\n// Event Listener:\naddBtn.forEach(btn =>\n  btn.addEventListener('click', function (e) {\n    const target = e.target.closest('.btn');\n\n    // Generating element markup and rendering it:\n    generateMarkupAndRender(target);\n\n    // Walking throw DOM tree to achive inserted input 'CLASS':\n    const insertedInput = document.querySelector(\n      `.${target.parentElement.firstElementChild.firstElementChild.firstElementChild.classList[0]}`\n    );\n\n    // Focus On it:\n    insertedInput.focus();\n\n    // Impleminting edit button:\n    // Chain to achive inserted element 'EDIT BUTTON':\n    insertedInput.nextElementSibling.firstElementChild.addEventListener(\n      'click',\n      e => {\n        if (e.target.classList.contains('edit__btn')) {\n          insertedInput.removeAttribute('disabled');\n          insertedInput.focus();\n        }\n      }\n    );\n\n    // Impleminting remove button:\n    // Chain to achive inserted element 'REMOVE BUTTON':\n    insertedInput.nextElementSibling.firstElementChild.nextElementSibling.addEventListener(\n      'click',\n      e => {\n        if (e.target.classList.contains('remove__btn')) {\n          // Ask the user to confirm the deletion\n          const confirmDelete = confirm(\n            `Are you sure you want to delete ${insertedInput.value}?`\n          );\n\n          // If the user confirms, remove the task item from the list\n          if (confirmDelete) {\n            insertedInput.parentElement.remove();\n            deleteTaskWith(insertedInput.dataset.id);\n          }\n        }\n      }\n    );\n\n    // Impleminting inserted input form:\n    insertedInput.parentElement.addEventListener('submit', e => {\n      e.preventDefault();\n      arrOfTasks.forEach(task =>\n        task.id === insertedInput.dataset.id &&\n        task.title !== insertedInput.value\n          ? [deleteTaskWith(task.id), addDataToLocalStorageFrom(arrOfTasks)]\n          : ''\n      );\n      insertedInput.value !== ''\n        ? [\n            insertedInput.setAttribute('disabled', ''),\n            addElementToArray(insertedInput, target),\n          ]\n        : alert('Please Fill Out Your Task . . .');\n    });\n\n    // Impleminting Drag and Drop:\n    const dragStart1 = e => {\n      e.target.classList.add('hold');\n      draggedItem = e.target;\n      e.dataTransfer.setData(\n        'text/plain',\n        draggedItem.firstElementChild.firstElementChild.dataset.id\n      );\n      e.dataTransfer.effectAlowed = 'move';\n      setTimeout(() => (e.target.classList = 'invisible'), 0);\n    };\n\n    const toDoItems = document.querySelectorAll('.to__do-el');\n    toDoItems.forEach(item => {\n      item.addEventListener('dragstart', dragStart1);\n      item.addEventListener('dragend', dragEnd);\n    });\n\n    taskContainers.forEach(container => {\n      container.addEventListener('dragover', dragOver);\n      container.addEventListener('dragenter', dragEnter);\n      container.addEventListener('dragleave', dragLeave);\n      container.addEventListener('drop', dragDrop);\n    });\n  })\n);\n\nfunction addElementToArray(taskTEXT, target) {\n  // Task Data\n  const task = {\n    element: taskTEXT,\n    id: taskTEXT.dataset.id,\n    title: taskTEXT.value,\n    state: target.dataset.section,\n  };\n\n  // Push Task To Array Of Tasks\n  arrOfTasks.push(task);\n\n  // Add Tasks To Local Storage\n  addDataToLocalStorageFrom(arrOfTasks);\n}\n\n// Sending Data to Local Storage:\nconst addDataToLocalStorageFrom = arrayOfTasks =>\n  window.localStorage.setItem('tasks', JSON.stringify(arrayOfTasks));\n\n// Selecting DOM Elements:\nconst removeBtn = document.querySelectorAll('.remove__btn');\nconst editBtn = document.querySelectorAll('.edit__btn');\nconst forms = document.querySelectorAll('form');\n\n// Getting Data from Local Storage:\nfunction getDataFromLocalStorage() {\n  let tasks = JSON.parse(localStorage.getItem('tasks'));\n  tasks && tasks.forEach(task => Render(task));\n}\n\n// Impleminting 'EDIT BUTTON':\neditBtn.forEach(btn =>\n  btn.addEventListener('click', e => {\n    if (e.target.classList.contains('edit__btn')) {\n      const clickedElInput = e.target.parentElement.previousElementSibling;\n      clickedElInput.removeAttribute('disabled');\n      clickedElInput.focus();\n    }\n  })\n);\n\n// Impleminting 'REMOVE BUTTON':\nremoveBtn.forEach(btn =>\n  btn.addEventListener('click', e => {\n    const clickedElInput = e.target.parentElement.previousElementSibling;\n    if (e.target.classList.contains('remove__btn')) {\n      // Remove Task From Local Storage\n      // Ask the user to confirm the deletion\n      const confirmDelete = confirm(\n        `Are you sure you want to delete ${clickedElInput.value}?`\n      );\n\n      // If the user confirms, remove the task item from the list\n      if (confirmDelete) {\n        deleteTaskWith(\n          e.target.parentElement.parentElement.parentElement.dataset.id\n        );\n        clickedElInput.parentElement.remove();\n      }\n    }\n  })\n);\n\n// Impleminting inserted input form:\nforms.forEach(form =>\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const clickedElInput = e.target.firstElementChild;\n\n    arrOfTasks.forEach(task =>\n      task.id === clickedElInput.closest('li').dataset.id &&\n      task.title !== clickedElInput.value\n        ? [\n            (task.title = clickedElInput.value),\n            addDataToLocalStorageFrom(arrOfTasks),\n          ]\n        : ''\n    );\n\n    clickedElInput.value !== ''\n      ? [\n          clickedElInput.setAttribute('disabled', ''),\n          addElementToArray(clickedElInput, e.target),\n        ]\n      : alert('Please Fill Out Your Task . . .');\n  })\n);\n\nconst deleteTaskWith = taskId => {\n  arrOfTasks = arrOfTasks.filter(task => task.id != taskId);\n  addDataToLocalStorageFrom(arrOfTasks);\n};\n\n// Impleminting Drag and Drop:\nlet draggedItem = null;\n\nconst dragStart = e => {\n  e.target.classList.add('hold');\n  draggedItem = e.target;\n  e.dataTransfer.setData('text/plain', draggedItem.dataset.id);\n  e.dataTransfer.effectAlowed = 'move';\n  setTimeout(() => (e.target.classList = 'invisible'), 0);\n};\n\nconst dragEnd = e => {\n  draggedItem = null;\n  e.target.classList = 'to__do-el';\n};\n\nconst dragOver = e => {\n  if (e.dataTransfer.types[0] === 'text/plain') {\n    e.preventDefault();\n  }\n};\nconst dragEnter = e => {\n  if (e.dataTransfer.types[0] === 'text/plain') {\n    e.preventDefault();\n    e.target.closest('ul').classList.add('droppable');\n  }\n};\nconst dragLeave = e => {\n  if (!e.relatedTarget.closest('ul'))\n    e.target.closest('ul').classList.remove('droppable');\n};\n\nconst dragDrop = e => {\n  const droppedItemId = e.dataTransfer.getData('text/plain');\n  const targetContainer = e.target.closest('ul');\n\n  const containerTasks = Array.from(targetContainer.children);\n  containerTasks.pop();\n  if (containerTasks.find(task => task.dataset.id === droppedItemId)) return;\n  e.preventDefault();\n  targetContainer.classList.remove('droppable');\n  targetContainer.prepend(draggedItem);\n  const droppedItem = targetContainer.firstElementChild;\n  const itemType = targetContainer.classList[0].substring(\n    0,\n    targetContainer.classList[0].length - 9\n  );\n  droppedItem.classList.add(`${itemType}-el`);\n  droppedItem.firstElementChild.firstElementChild.classList = `${itemType}-input`;\n  arrOfTasks.forEach(\n    task =>\n      task.id === droppedItemId && [\n        (task.state = itemType),\n        addDataToLocalStorageFrom(arrOfTasks),\n      ]\n  );\n};\n\nconst toDoItems = document.querySelectorAll('.to__do-el');\ntoDoItems.forEach(item => {\n  item.addEventListener('dragstart', dragStart);\n  item.addEventListener('dragend', dragEnd);\n});\n\ntaskContainers.forEach(container => {\n  container.addEventListener('dragover', dragOver);\n  container.addEventListener('dragenter', dragEnter);\n  container.addEventListener('dragleave', dragLeave);\n  container.addEventListener('drop', dragDrop);\n});\n"],"names":["addBtn","document","querySelectorAll","taskContainers","Render","task","disabled","markup","id","state","title","forEach","container","classList","contains","insertAdjacentHTML","generateMarkupAndRender","target","dataset","section","Date","now","arrOfTasks","addElementToArray","taskTEXT","element","value","push","addDataToLocalStorageFrom","localStorage","getItem","JSON","parse","getDataFromLocalStorage","btn","addEventListener","e","closest","insertedInput","querySelector","parentElement","firstElementChild","focus","nextElementSibling","removeAttribute","confirm","remove","deleteTaskWith","preventDefault","setAttribute","alert","dragStart1","add","draggedItem","dataTransfer","setData","effectAlowed","setTimeout","item","dragEnd","dragOver","dragEnter","dragLeave","dragDrop","arrayOfTasks","window","setItem","stringify","removeBtn","editBtn","forms","tasks","clickedElInput","previousElementSibling","form","taskId","filter","dragStart","types","relatedTarget","droppedItemId","getData","targetContainer","containerTasks","Array","from","children","pop","find","prepend","droppedItem","itemType","substring","length","toDoItems"],"version":3,"file":"index.a908ef41.js.map"}